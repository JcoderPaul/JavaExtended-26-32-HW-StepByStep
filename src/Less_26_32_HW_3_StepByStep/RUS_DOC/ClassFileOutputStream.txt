******* Class FileOutputStream *******

public class FileOutputStream extends OutputStream

Все реализованные интерфейсы: Closeable, Flushable, AutoCloseable

Поток вывода файла — это поток вывода для записи данных в файл или
в дескриптор файла. Доступен ли файл или может быть создан, зависит
от базовой платформы. Некоторые платформы, в частности, позволяют
одновременно открывать файл для записи только одним FileOutputStream
(или другим объектом записи файла). В таких ситуациях конструкторы
этого класса завершатся ошибкой, если соответствующий файл уже открыт.

FileOutputStream предназначен для записи потоков необработанных байтов,
таких как данные изображения. Для записи потоков символов лучше
рассматривать (использовать) класс FileWriter и его методы.

******* КОНСТРУКТОРЫ *******
FileOutputStream(File file) - Создает поток вывода файла для записи в файл, представленный
                              указанным объектом File.

                              Новый объект FileDescriptor создается для представления этого
                              подключения к файлу. Во-первых, если есть диспетчер безопасности,
                              его метод checkWrite вызывается с путем, представленным аргументом
                              файла, в качестве аргумента.

                              Если файл существует, но является каталогом, а не обычным файлом,
                              не существует, но не может быть создан или не может быть открыт
                              по какой-либо другой причине, выдается исключение FileNotFoundException.

                              Параметры:
                              file - объект класса файл, который нужно открыть для записи.

FileOutputStream(File file, boolean append) - Создает поток вывода файла для записи в файл,
    представленный указанным объектом File. Если второй аргумент 'TRUE', то байты будут
    записаны в конец файла, а не в начало. Новый объект FileDescriptor создается для
    представления этого подключения к файлу.

    Во-первых, если есть диспетчер безопасности, его метод checkWrite вызывается с путем,
    представленным аргументом файла, в качестве аргумента.

    Если файл существует, но является каталогом, а не обычным файлом, не существует, но не
    может быть создан или не может быть открыт по какой-либо другой причине, выдается
    исключение FileNotFoundException.

    Параметры:
    - file - объект класса файл, который нужно открыть для записи;
    - append - если флаг выставлен в 'true', то байты будут записываться в конец файла,
               а не в начало, т.е. вновь поступившие данные будут дозаписываться к уже
               имеющимся, а не затирать их.

FileOutputStream(FileDescriptor fdObj) - Создает выходной поток файла для записи в указанный
    файловый дескриптор, который представляет существующее соединение с фактическим файлом в
    файловой системе.

    Во-первых, если есть диспетчер безопасности, его метод checkWrite вызывается с аргументом
    файлового дескриптора fdObj в качестве аргумента.

    Если fdObj имеет значение null, генерируется исключение NullPointerException.

    Этот конструктор не генерирует исключение, если fdObj недействителен. Однако, если методы
    вызываются в результирующем потоке для попытки ввода-вывода в потоке, создается исключение
    IOException.

    Параметры:
    fdObj - файловый дескриптор, который будет открыт для записи.

------------------------------------------------------------------------------------------------
См. более подробно: https://docs.oracle.com/javase/7/docs/api/java/io/FileDescriptor.html
------------------------------------------------------------------------------------------------

FileOutputStream(String name) - Создает поток вывода файла для записи в файл с указанным именем.
                                Новый объект FileDescriptor создается для представления этого
                                подключения к файлу.

                                Во-первых, если есть менеджер безопасности, вызывается его метод
                                checkWrite с именем в качестве аргумента.

                                Если файл существует, но является каталогом, а не обычным файлом,
                                не существует, но не может быть создан или не может быть открыт по
                                какой-либо другой причине, выдается исключение FileNotFoundException.

                                Параметры:
                                    - name - системно-зависимое имя файла

FileOutputStream(String name, boolean append) - Создает поток вывода файла для записи в файл с
                                                указанным именем.

    Если второй аргумент 'флаг - true', то байты будут записаны в конец файла, а не в начало.
    Новый объект FileDescriptor создается для представления этого подключения к файлу.

    Во-первых, если есть менеджер безопасности, вызывается его метод checkWrite с именем в
    качестве аргумента.

    Если файл существует, но является каталогом, а не обычным файлом, не существует, но не
    может быть создан или не может быть открыт по какой-либо другой причине, выпадает
    исключение FileNotFoundException.

    Параметры:
    - name - системно-зависимое имя файла;
    - append - если true, то байты будут записываться в конец файла, стыкуясь к уже записанным,
               а не в начало, поверх уже записанных (т.е. перезапись если false).

******* МЕТОДЫ *******
void close() - Закрывает текущий (данный) поток вывода файлов и освобождает
               все системные ресурсы, связанные с этим потоком. Этот выходной
               поток файла больше нельзя использовать для записи байтов. Если
               у этого потока есть связанный канал, то этот канал также
               закрывается.

protected void finalize() - Очищает соединение с файлом и гарантирует, что
                            метод закрытия этого потока вывода файла вызывается,
                            когда больше нет ссылок на этот поток.

FileChannel getChannel() - Возвращает уникальный объект FileChannel, связанный
                           с этим выходным потоком файла.

                           Начальная позиция возвращаемого канала будет равна
                           количеству байтов, записанных в файл на данный момент,
                           если только этот поток не находится в режиме добавления,
                           и в этом случае он будет равен размеру файла.

                           Запись байтов в этот поток соответственно увеличивает
                           позицию канала. Изменение позиции канала, либо явно, либо
                           путем записи, изменит позицию файла этого потока.

                           Возвращает файловый канал, связанный с этим выходным
                           потоком файла.

FileDescriptor getFD() - Возвращает дескриптор файла, связанный с этим потоком.

void write(byte[] b) - Записывает байты b.length из указанного массива байтов в
                       этот выходной поток файла, где b - данные.

void write(byte[] b, int off, int len) - Записывает len байтов из указанного массива
                                         байтов, начиная со смещения, в выходной поток
                                         этого файла. Где b - данные, off - начальное
                                         смещение в данных, len - количество байтов
                                         для записи.

void write(int b) - Записывает указанный байт в этот выходной поток файла, где b - байт
                    для записи.

------------------------------------------------------------------------------------------------
См. более подробно: https://docs.oracle.com/javase/7/docs/api/java/io/FileOutputStream.html
------------------------------------------------------------------------------------------------
