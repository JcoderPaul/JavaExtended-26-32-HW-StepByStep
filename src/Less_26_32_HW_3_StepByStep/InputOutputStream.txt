******** Потоки ввода-вывода. Работа с файлами ********

В Java основной функционал работы с потоками данных сосредоточен в классах из пакета java.io.

Ключевым понятием здесь является понятие потока (не Stream и не Thread). Хотя понятие "поток"
в программировании довольно перегружено и может обозначать множество различных концепций. В
данном случае применительно к работе с файлами и вводом-выводом мы будем говорить о потоке,
как об абстракции, которая используется для чтения или записи информации (файлов, сокетов,
текста консоли и т.д.).

Поток связан с реальным физическим устройством с помощью системы ввода-вывода Java. У нас может
быть определен поток, который связан с файлом и через который мы можем вести чтение или запись
файла. Это также может быть поток, связанный с сетевым сокетом (Socket), с помощью которого можно
получить или отправить данные в сети.

Все эти задачи: чтение и запись различных файлов, обмен информацией по сети, ввод-вывод в консоли
можно решать в Java с помощью потоков.

Объект, из которого можно считать данные - называется потоком ввода.
Объект, в который можно записывать данные - называется потоком вывода.

Например, если надо считать содержание файла, то применяется поток ввода,
а если надо записать в файл - то поток вывода.

В основе всех классов, управляющих потоками байтов, находятся два абстрактных класса:
- InputStream (представляющий потоки ввода);
- OutputStream (представляющий потоки вывода);

Нужно помнить, что на более низком уровне обмен данными идет не строками, а битами и байтами.
Поскольку работать с байтами не очень удобно, то для работы с потоками символов (например с
текстом) были добавлены абстрактные классы Reader (для чтения потоков символов) и Writer
(для записи потоков символов).

Все остальные классы, работающие с потоками, являются наследниками этих абстрактных классов.
Основные классы потоков:
-----------------------------------------------------------------------------------------
InputStream             | OutputStream          | Reader            | Writer
-----------------------------------------------------------------------------------------
BufferedInputStream     | BufferedOutputStream  | BufferedReader    | BufferedWriter
ByteArrayInputStream    | ByteArrayOutputStream | CharArrayReader   | CharArrayWriter
DataInputStream         | DataOutputStream      | FileReader        | FileWriter
FileInputStream         | FileOutputStream      | FilterReader      | FilterWriter
FilterInputStream       | ObjectOutputStream    | InputStreamReader | OutputStreamWriter
InputStream             | PipedOutputStream     | LineNumberReader  | PipedWriter
ObjectInputStream       | FilterOutputStream    | PipedReader       | PrintWriter
StringBufferInputStream |                       | PushbackReader    | StringWriter
PipedInputStream        |                       | StringReader      |
PushbackInputStream     |                       |                   |
SequenceInputStream     |                       |                   |
-----------------------------------------------------------------------------------------

Можно применить более примитивную (но более понятную) таблицу-схему:
-------------------------------------------------------------------------------
                       |    Чтение/Запись     |    Чтение/Запись
                       |        Байтов        |       Символов
-------------------------------------------------------------------------------
Абстракция             | InputStream          | Reader
                       | OutputStream         | Writer
-------------------------------------------------------------------------------
Работа с файлами       | FileInputStream      | FileReader
                       | FileOutputStream     | FileWriter
-------------------------------------------------------------------------------
Использование буфера   | BufferedInputStream  | BufferedReader
для ускорения процесса | BufferedOutputStream | BufferedWriter
чтения/записи          |                      |
-------------------------------------------------------------------------------
InputStreamReader/OutputStreamWriter - оболочки для InputStream/OutputStream
-------------------------------------------------------------------------------