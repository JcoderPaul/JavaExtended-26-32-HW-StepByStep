******* Class BufferedInputStream *******

public class BufferedInputStream extends FilterInputStream

Все реализованные интерфейсы: Closeable, AutoCloseable

BufferedInputStream добавляет функциональность другому входному потоку,
а именно возможность буферизации ввода и поддержку методов отметки и
сброса. При создании BufferedInputStream создается массив внутренних
буферов. Когда байты из потока считываются или пропускаются, внутренний
буфер по мере необходимости пополняется из содержащегося в нем входного
потока, по несколько байтов за раз. Операция отметки запоминает точку
во входном потоке, а операция сброса вызывает повторное чтение всех
байтов, прочитанных с момента самой последней операции отметки, прежде
чем из содержащегося входного потока будут взяты новые байты.

******* КОНСТРУКТОРЫ *******
BufferedInputStream(InputStream in) - Создает BufferedInputStream и сохраняет
    его аргумент, входной поток, для последующего использования. Внутренний
    массив буферов создается и сохраняется в buf. Где in - базовый входной поток.

BufferedInputStream(InputStream in, int size) - Создает BufferedInputStream с
    указанным размером буфера и сохраняет его аргумент, входной поток, для
    последующего использования. Внутренний буферный массив длины size создается
    и сохраняется в buf. Где in - базовый входной поток, size - размер буфера.

******* МЕТОДЫ УНАСЛЕДОВАННЫЕ *******
Методы, унаследованные от класса java.io.FilterInputStream: read;
Методы, унаследованные от класса java.lang.Object: clone, equals, finalize,
                                                   getClass, hashCode, notify,
                                                   notifyAll, toString, wait,
                                                   wait, wait;

******* ОБОЗНАЧЕНИЯ *******
protected byte[] buf - Массив внутренних буферов, в котором хранятся данные.

protected int count - Индекс на единицу больше, чем индекс последнего
                      действительного байта в буфере.

protected int marklimit - Максимальное упреждающее чтение, разрешенное после
                          вызова метода mark до того, как последующие вызовы
                          метода reset не завершатся сбоем.

protected int markpos - Значение поля pos на момент вызова последнего метода
                        mark.

protected int pos - Текущая позиция в буфере.

******* МЕТОДЫ КЛАССА  BufferedInputStream *******
int available() - Возвращает оценку количества байтов, которые могут быть прочитаны
                  (или пропущены) из этого входного потока без блокировки при следующем
                  вызове метода для этого входного потока.

void close() - Закрывает этот входной поток и освобождает все системные ресурсы,
               связанные с потоком.

void mark(int readlimit) - См. общий контракт метода mark для InputStream.

boolean	markSupported() -  Метод проверяет, поддерживает ли текущий (данный) входной
                           поток методы отметки и сброса.

int read() - См. общий контракт метода чтения InputStream.

int read(byte[] b, int off, int len) - Считывает байты из этого потока ввода байтов в
                                       указанный массив байтов, начиная с заданного
                                       смещения.

void reset() - См. общий контракт метода сброса InputStream.

long skip(long n) - См. общий контракт метода skip для InputStream.

------------------------------------------------------------------------------------------------
Более подробно см. https://docs.oracle.com/javase/7/docs/api/java/io/BufferedInputStream.html
------------------------------------------------------------------------------------------------