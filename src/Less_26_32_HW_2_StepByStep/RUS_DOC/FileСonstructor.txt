******* Конструктор класса File *******

1 - public File(String pathname)

Создает новый экземпляр File путем преобразования заданной строки пути в абстрактный путь.
Если данная строка является пустой строкой, то результатом является пустой абстрактный путь.

Параметры: pathname - строка пути;
Исключения: NullPointerException — если аргумент пути равен null.
---------------------------------------------------------------------------------------------
2 - public File(String parent, String child)

Создает новый экземпляр File из родительской строки пути и дочерней строки пути.

Если parent имеет значение null, то новый экземпляр File создается, как если бы
вызывался конструктор File с одним аргументом для заданной строки имени дочернего
элемента. В противном случае родительская строка пути используется для обозначения
каталога, а дочерняя строка пути используется для обозначения либо каталога, либо
файла.

Если строка дочернего пути является абсолютной, она преобразуется в относительный
путь системно-зависимым способом.

Если parent является пустой строкой, то новый экземпляр File создается путем
преобразования дочернего элемента в абстрактный путь и сопоставления результата с
системно-зависимым каталогом по умолчанию. В противном случае каждая строка пути
преобразуется в абстрактный путь, а дочерний абстрактный путь разрешается
относительно родителя.

Параметры: parent - Строка родительского пути;
           child - Строка пути к дочернему элементу;
Исключения: NullPointerException - Если дочерний элемент имеет значение null
---------------------------------------------------------------------------------------------
3 - public File(File parent, String child)

Создает новый экземпляр File из родительского абстрактного пути и строки дочернего пути.

Если parent имеет значение null, то новый экземпляр File создается, как если бы вызывался
конструктор File с одним аргументом для заданной строки имени дочернего элемента. В противном
случае родительский абстрактный путь используется для обозначения каталога, а дочерняя строка
пути используется для обозначения либо каталога, либо файла.

Если строка дочернего пути является абсолютной, она преобразуется в относительный путь
системно-зависимым способом.

Если parent является пустым абстрактным путем, то новый экземпляр File создается
путем преобразования дочернего элемента в абстрактный путь и сопоставления результата с
системно-зависимым каталогом по умолчанию. В противном случае каждая строка пути преобразуется
в абстрактный путь, а дочерний абстрактный путь разрешается относительно родителя.

Параметры: parent - родительский абстрактный путь;
           child - строка пути к дочернему элементу;
Исключения: NullPointerException - Если дочерний элемент имеет значение null.
---------------------------------------------------------------------------------------------
4 - public File(URI uri)

Создает новый экземпляр File, преобразовывая данный файл: URI в абстрактный путь.

Точная форма файла: URI зависит от системы, поэтому преобразование, выполняемое этим
конструктором, также зависит от системы.

Для заданного абстрактного имени пути f гарантируется, что новый файл будет
(f.toURI()).equals(f.getAbsoluteFile()) до тех пор, пока исходный абстрактный путь,
URI и новый абстрактный путь создаются (возможно, разными вызовами) на одной и той
же виртуальной машине Java.

Однако эта связь обычно не выполняется, когда файл: URI, созданный на виртуальной
машине в одной операционной системе, преобразуется в абстрактный путь на виртуальной
машине в другой операционной системе.

Параметры: uri — абсолютный иерархический URI со схемой, равной «файлу», непустым
           компонентом пути и неопределенными компонентами полномочий, запросов и
           фрагментов.
Исключения: NullPointerException — если uri имеет значение null;
            IllegalArgumentException — если предварительные условия для параметра не выполняются.

