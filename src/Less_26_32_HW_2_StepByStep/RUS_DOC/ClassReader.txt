******* Class Reader *******

public abstract class Reader extends Object
                             implements Readable, Closeable

Все реализуемые интерфейсы: Closeable, AutoCloseable, Readable
Прямые известные подклассы: BufferedReader, CharArrayReader, FilterReader,
                            InputStreamReader, PipedReader, StringReader

Изучить дополнительно: BufferedReader, LineNumberReader, CharArrayReader,
                       InputStreamReader, FileReader, FilterReader,
                       PushbackReader, PipedReader, StringReader, Writer

Абстрактный класс Reader применяется для чтения потоков символов.
Единственные методы, которые должен реализовать подкласс, это
read(char[], int, int) и close().

Однако большинство подклассов переопределяют некоторые из определенных
здесь методов, чтобы обеспечить более высокую эффективность, дополнительную
функциональность или и то, и другое.

******* КОНСТРУКТОР *******
protected Reader() - Создает новое средство чтения потока символов, критические
                     разделы которого будут синхронизироваться на самом устройстве
                     чтения.

protected Reader(Object lock) - Создает новую программу чтения символьного потока,
                                критические разделы которой будут синхронизироваться
                                с данным (переданным) объектом.

******* МЕТОДЫ *******
abstract void close() - Закрывает поток и освобождает все связанные
                        с ним системные ресурсы.

void mark(int readAheadLimit) - Отмечает текущую позицию в потоке.

boolean	markSupported() - Сообщает, поддерживает ли этот поток
                          операцию mark().

int	read() - Читает один символ. Этот метод будет блокироваться
             до тех пор, пока не будет доступен символ, не произойдет
             ошибка ввода-вывода или не будет достигнут конец потока.

             Подклассы, предназначенные для поддержки эффективного
             односимвольного ввода, должны переопределить этот метод.

             Символ считывается как целое число в диапазоне от 0 до 65535
             (0x00-0xffff) или -1, если достигнут конец потока.

int	read(char[] cbuf) - Считывает символы в массив. Этот метод будет
                        блокироваться до тех пор, пока не будет доступен
                        какой-либо ввод, не произойдет ошибка ввода-вывода
                        или не будет достигнут конец потока.

abstract int read(char[] cbuf, int off, int len) - Считывает символы в
    часть массива. Этот метод будет блокироваться до тех пор, пока не
    будет доступен какой-либо ввод, не произойдет ошибка ввода-вывода
    или не будет достигнут конец потока.

Параметры: cbuf - Буфер назначения;
           off - Смещение, с которого нужно начать хранить символы;
           len - максимальное количество символов для чтения;
Возвращает: Количество прочитанных символов или -1, если достигнут
            конец потока

int read(CharBuffer target) - Пытается прочитать символы в указанный
    буфер символов. Буфер используется как хранилище символов как есть:
    единственные внесенные изменения являются результатами операции
    размещения. Никакого перелистывания или перемотки буфера не
    выполняется.

boolean ready() - Сообщает, готов ли этот поток для чтения.

void reset() - Сбрасывает поток.

long skip(long n) - Пропускает символы.

---------------------------------------------------------------------------------
Более подробно см. https://docs.oracle.com/javase/7/docs/api/java/io/Reader.html
---------------------------------------------------------------------------------

